set(CMAKE_VERBOSE_MAKEFILE ON)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/")
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

set(CMAKE_CXX_COMPILER ${CMAKE_CXX})

# IF (CMAKE_CXX MATCHES "clang")
# 	# using Clang
# 	execute_process(COMMAND which ${CMAKE_C} OUTPUT_VARIABLE Clang_C_COMPILER)
# 	execute_process(COMMAND which ${CMAKE_CXX} OUTPUT_VARIABLE Clang_CXX_COMPILER)
# 	message(Clang_C_COMPILER: ${Clang_C_COMPILER})
# 	message(Clang_CXX_COMPILER: ${Clang_CXX_COMPILER})
# 	string(STRIP ${Clang_C_COMPILER} Clang_C_COMPILER)
# 	string(STRIP ${Clang_CXX_COMPILER} Clang_CXX_COMPILER)
# 	set(CMAKE_C_COMPILER ${Clang_C_COMPILER})
# 	set(CMAKE_CXX_COMPILER ${Clang_CXX_COMPILER})
# #ELSEIF (CMAKE_CXX MATCHES "GNU")
# #    # using GCC
# #    execute_process(COMMAND which g++ OUTPUT_VARIABLE GNU_C_COMPILER)
# #    execute_process(COMMAND which g++ OUTPUT_VARIABLE GNU_CXX_COMPILER)
# #    message(GNU_C_COMPILER: ${GNU_C_COMPILER})
# #    message(GNU_CXX_COMPILER: ${GNU_CXX_COMPILER})
# #    string(STRIP ${GNU_C_COMPILER} GNU_C_COMPILER)
# #    string(STRIP ${GNU_CXX_COMPILER} GNU_CXX_COMPILER)
# #    set(CMAKE_C_COMPILER ${GNU_C_COMPILER})
# #    set(CMAKE_CXX_COMPILER ${GNU_CXX_COMPILER})
# #ELSEIF (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
#     # using Visual Studio C++
# ELSE()
    message("\nDEFAULT COMPILER USED: ${CMAKE_C_COMPILER} ${CMAKE_CXX_COMPILER}")
# ENDIF()
