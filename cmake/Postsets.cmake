# cmake -DCMAKE_BUILD_TYPE=Debug ..

message("FLAGS: ${CMAKE_CXX_COMPILER} ${CMAKE_CXX}\n")

IF (CMAKE_BUILD_TYPE MATCHES Debug)
	IF (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -W4")
	ELSEIF (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -Weverything -Wno-c++98-compat -Wno-global-constructors -Wno-exit-time-destructors -Wno-padded -Wuninitialized -Wno-c++98-compat-pedantic -Wno-unused-macros -std=c++20 -mavx2 -mavx -msse2")
		#SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -Weverything -Wno-c++98-compat -Wno-global-constructors -Wno-exit-time-destructors -Wno-padded -Wuninitialized -Wno-c++98-compat-pedantic -Wno-unused-macros -std=c++20 -mavx2 -mavx -msse2")
	ELSEIF (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -pedantic -Wall -Wextra -fsanitize=address -fsanitize=undefined -fsanitize=leak")
	ENDIF()
	message("\nDEBUG BUILD.\n")
ELSEIF (CMAKE_BUILD_TYPE MATCHES Release)
	IF (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O2 -W4")
	ELSEIF (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O2 -Weverything -Wno-c++98-compat -fsanitize=address -fsanitize=undefined -fsanitize=leak")
	ELSEIF (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -02 -pedantic -Wall -Wextra -fsanitize=address -fsanitize=undefined -fsanitize=leak")
	ENDIF()
	message("\nRELEASE BUILD.\n")
ELSE()
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g")
    message("\nDEV BUILD.\n")
ENDIF()

message("FLAGS: ${CMAKE_CXX_COMPILER} ${CMAKE_CXX_FLAGS}\n")
